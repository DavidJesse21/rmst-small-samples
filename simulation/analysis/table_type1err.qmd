---
format:
  pdf:
    pdf-engine: pdflatex
    toc: false
    toc-depth: 2
    number-sections: true
    toccolor: black
    citecolor: blue
    linkcolor: black
    fig-pos: "htbp"
    documentclass: scrartcl
    classoption: [headings=normal, numbers=noenddot]
    fontsize: 12pt
    geometry:
      - left=1cm
      - right=1cm
      - top=1cm
      - bottom=1cm
      - bindingoffset=5mm
execute: 
  echo: false
  warning: false
  output: true
crossref: 
  eq-prefix: ""
knitr:
  opts_knit:
    root.dir: "C:/Users/david/Uni/00 Master Goettingen/05 Masterthesis/master-thesis"
---

```{r}
#| include: false

box::use(
  fs,
  data.table[...],
  kableExtra[...]
)

options(box.path = "R")

box::use(
  simfuns2/post_submit[read_logs],
  simfuns2/get_funs[get_scenario_table],
  simfuns2/analyze[calc_rejection_rates, calc_ci_metrics, setj_samples_alloc,
                   setj_percent]
)

dt = readRDS(fs$path("simulation", "results", "2024-01-16_results1", ext = "rds"))
invisible(setalloccol(dt))
dts = get_scenario_table()
```

```{r}
# Calculate rejection rates
dt_err = calc_rejection_rates(dt[rmst_diff == 0], stats_NA = FALSE)

# For latex, directly starting off with a table in wide format might be easier
dt_err = dcast(dt_err, scenario.id ~ algo.id, value.var = "reject")
setnames(dt_err, old = as.character(1:4), new = paste0("algo", 1:4))

# Append scenario information...
dt_err = merge(dt_err, dts, by = "scenario.id")
setj_percent(dt_err, paste0("algo", 1:4))
for (j in paste0("algo", 1:4)) {
  set(dt_err, j = j, value = round(dt_err[[j]], 1))
}
dt_err[, samples_alloc := factor(
  sprintf("n_%d_%d", n0 / samples_k, n1 / samples_k),
  levels = sprintf("n_%d_%d", c(12, 15, 18), c(18, 15, 12))
)]
# ... but some columns are or have become redundant
for (j in c("scenario.id", "rmst_diff", "n0", "n1")) {
  set(dt_err, j = j, value = NULL)
}

# We want the data.table to be even wider for latex
dt_err = dcast(
  dt_err,
  surv_model + cens_model + samples_k ~ samples_alloc, value.var = paste0("algo", 1:4)
)
#View(dt_err)

# Order columns and rows
setcolorder(
  dt_err, neworder = c(
    "surv_model", "cens_model", "samples_k",
    sprintf("algo%d_n_12_18", 1:4),
    sprintf("algo%d_n_15_15", 1:4),
    sprintf("algo%d_n_18_12", 1:4)
  )
)
dt_err[, `:=`(
  surv_model = factor(surv_model, levels = c("ph_exp", "crossing_pwexp", "crossing_wb")),
  cens_model = factor(cens_model, levels = c("uneq_wb", "eq_unif", "eq_wb"))
)]
setorder(dt_err, surv_model, cens_model, samples_k)

# Make some cells of column `cens_model` empty
drop_idx = setdiff(1:nrow(dt_err), seq(1, nrow(dt_err), by = 4))
dt_err[drop_idx, cens_model := NA]
# also need to relabel this
dt_err[, cens_model := as.character(cens_model)]
dt_err[, cens_model := fcase(
  cens_model == "uneq_wb", "un. W.",
  cens_model == "eq_unif", "eq. U.",
  cens_model == "eq_wb", "eq. W."
)]
```

```{r}
# NAs as empty cells
options(knitr.kable.NA = '')

# Conditional formatting
for (j in colnames(dt_err)[-(1:3)]) {
  set(
    dt_err, j = j, value = cell_spec(
      format(dt_err[[j]], digits = 1, nsmall = 1), bold = between(dt_err[[j]], 4.4, 5.6)
    )
  )
}

# latex table
kbl(
  copy(dt_err)[, surv_model := NULL],
  format = "latex",
  digits = 1,
  booktabs = TRUE,
  centering = TRUE,
  escape = FALSE,
  align = c("l", rep("c", 13)),
  col.names = c("Censoring", "K", rep(c("Asy", "Perm", "PO1", "PO2"), 3)),
  linesep = c(rep("", 11), "\\hline")
) |>
  # Group the columns by their sample allocation
  add_header_above(
    setNames(
      c(1, 1, 4, 4, 4),
      c(" ", " ", sprintf(r"($N = K \\cdot (%d, %d)$)", c(12, 15, 18), c(18, 15, 12)))
    ),
    escape = FALSE, bold = TRUE
  ) |>
  # Borders between the groups make it more accessible
  column_spec(2, border_right = TRUE) |>
  column_spec(6, border_right = TRUE) |>
  column_spec(10, border_right = TRUE) |>
  # Group table (rows) by survival distributions
  pack_rows(
    "S1: Exponential distributions", 1, 12,
    bold = FALSE, latex_gap_space = "0.5em", hline_after = TRUE
  ) |>
  pack_rows(
    "S7: Exponential and piecewise exponential distributions with crossing curves", 13, 24,
    bold = FALSE, latex_gap_space = "0.5em", hline_after = TRUE
  ) |>
    pack_rows(
      "S8: Weibull distributions with crossing curves and shape alternatives", 25, 36,
      bold = FALSE, latex_gap_space = "0.5em", hline_after = TRUE
    ) |>
  # Make it more accessible using stripes option
  kable_styling(
    latex_options = "striped",
    stripe_index = c(5:8, 17:20, 29:32),
    stripe_color = "#e9ecef"
  ) |>
  # Explain binomial confidence interval and abbreviations
  footnote(
    general = c(
      paste0(
        r"(\\textit{Note:} )",
        "The values inside the binomial confidence interval [4.4\\\\%, 5.6\\\\%] are printed bold."
      ),
      paste0(
        r"(\\textit{Abbreviations:} )",
        "Asy, asymptotic test; ", "Perm, studentized permutation test; ",
        "PO1, pseudo-observations + HC3 covariance estimator; ",
        "PO2, infinitesimal jackknife pseudo-observations + bootstrap covariance estimator; ",
        "un. W., unequal Weibull censoring; ",
        "eq. U., equal uniform censoring; ",
        "eq. W., equal Weibull censoring."
      )
    ),
    general_title = "",
    escape = FALSE,
    threeparttable = TRUE
  )
```

